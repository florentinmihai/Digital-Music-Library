{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\whole\\\\Documents\\\\Digital-Music-Library\\\\Digital-Music-Library\\\\digital-music-library\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const {\n    MongoClient,\n    ServerApiVersion\n  } = require(\"mongodb\");\n  const uri = \"mongodb+srv://admin:4yGwB7vNXagssIDL@musiclibrary.aojeux4.mongodb.net/?appName=MusicLibrary\";\n  // Create a MongoClient with a MongoClientOptions object to set the Stable API version\n  const client = new MongoClient(uri, {\n    serverApi: {\n      version: ServerApiVersion.v1,\n      strict: true,\n      deprecationErrors: true\n    }\n  });\n  async function run() {\n    try {\n      // Connect the client to the server\t(optional starting in v4.7)\n      await client.connect();\n      // Send a ping to confirm a successful connection\n      await client.db(\"admin\").command({\n        ping: 1\n      });\n      console.log(\"Pinged your deployment. You successfully connected to MongoDB!\");\n    } finally {\n      // Ensures that the client will close when you finish/error\n      await client.close();\n    }\n  }\n  run().catch(console.dir);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hello World!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","jsxDEV","_jsxDEV","App","MongoClient","ServerApiVersion","require","uri","client","serverApi","version","v1","strict","deprecationErrors","run","connect","db","command","ping","console","log","close","catch","dir","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["C:/Users/whole/Documents/Digital-Music-Library/Digital-Music-Library/digital-music-library/src/index.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\n\r\nfunction App() {\r\n  const { MongoClient, ServerApiVersion } = require(\"mongodb\");\r\n  const uri =\r\n    \"mongodb+srv://admin:4yGwB7vNXagssIDL@musiclibrary.aojeux4.mongodb.net/?appName=MusicLibrary\";\r\n  // Create a MongoClient with a MongoClientOptions object to set the Stable API version\r\n  const client = new MongoClient(uri, {\r\n    serverApi: {\r\n      version: ServerApiVersion.v1,\r\n      strict: true,\r\n      deprecationErrors: true,\r\n    },\r\n  });\r\n  async function run() {\r\n    try {\r\n      // Connect the client to the server\t(optional starting in v4.7)\r\n      await client.connect();\r\n      // Send a ping to confirm a successful connection\r\n      await client.db(\"admin\").command({ ping: 1 });\r\n      console.log(\r\n        \"Pinged your deployment. You successfully connected to MongoDB!\"\r\n      );\r\n    } finally {\r\n      // Ensures that the client will close when you finish/error\r\n      await client.close();\r\n    }\r\n  }\r\n  run().catch(console.dir);\r\n\r\n  return <h1>Hello World!</h1>;\r\n}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\nroot.render(<App />);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EACb,MAAM;IAAEC,WAAW;IAAEC;EAAiB,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;EAC5D,MAAMC,GAAG,GACP,6FAA6F;EAC/F;EACA,MAAMC,MAAM,GAAG,IAAIJ,WAAW,CAACG,GAAG,EAAE;IAClCE,SAAS,EAAE;MACTC,OAAO,EAAEL,gBAAgB,CAACM,EAAE;MAC5BC,MAAM,EAAE,IAAI;MACZC,iBAAiB,EAAE;IACrB;EACF,CAAC,CAAC;EACF,eAAeC,GAAGA,CAAA,EAAG;IACnB,IAAI;MACF;MACA,MAAMN,MAAM,CAACO,OAAO,CAAC,CAAC;MACtB;MACA,MAAMP,MAAM,CAACQ,EAAE,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAC,CAAC;MAC7CC,OAAO,CAACC,GAAG,CACT,gEACF,CAAC;IACH,CAAC,SAAS;MACR;MACA,MAAMZ,MAAM,CAACa,KAAK,CAAC,CAAC;IACtB;EACF;EACAP,GAAG,CAAC,CAAC,CAACQ,KAAK,CAACH,OAAO,CAACI,GAAG,CAAC;EAExB,oBAAOrB,OAAA;IAAAsB,QAAA,EAAI;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC9B;AAACC,EAAA,GA7BQ1B,GAAG;AA+BZ,MAAM2B,IAAI,GAAG9B,QAAQ,CAAC+B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjEH,IAAI,CAACI,MAAM,eAAChC,OAAA,CAACC,GAAG;EAAAsB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAC,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
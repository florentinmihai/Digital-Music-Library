{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\whole\\\\Documents\\\\Digital-Music-Library\\\\Digital-Music-Library\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport NavBar from \"./components/NavBar\";\nimport Search from \"./components/Search\";\nimport Main from \"./components/Main\";\nimport Box from \"./components/Box\";\nimport ArtistList from \"./components/ArtistList\";\nimport AlbumList from \"./components/AlbumList\";\nimport AlbumDetails from \"./components/AlbumDetails\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [list, setList] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(null);\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\n  const [newArtistName, setNewArtistName] = useState(\"\");\n  const [newAlbumName, setNewAlbumName] = useState(\"\");\n  const [newSongName, setNewSongName] = useState(\"\");\n  const [newSongLength, setNewSongLength] = useState(\"0:00\");\n  useEffect(() => {\n    Axios.get(\"http://localhost:4000/api/retrieveMusicLibrary\").then(res => {\n      const data = res.data;\n      if (Array.isArray(data)) {\n        setList(data);\n      } else {\n        console.error(\"Unexpected data structure:\", data);\n        setList([]);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n      setList([]);\n    });\n  }, []);\n  function handleSelectArtist(artist) {\n    setSelectedArtist(selectedArtist => artist === selectedArtist ? null : artist);\n    setSelectedAlbum(null); // Reset selected album when a new artist is selected\n  }\n  function handleSelectAlbum(album) {\n    setSelectedAlbum(selectedAlbum => album === selectedAlbum ? null : album);\n  }\n  async function handleDeleteArtist(artistName) {\n    try {\n      await Axios.delete(`http://localhost:4000/api/deleteArtist/${artistName}`);\n      setList(list => list.filter(artist => artist.name !== artistName));\n      setSelectedArtist(null);\n      setSelectedAlbum(null);\n    } catch (error) {\n      console.error(\"Error deleting artist:\", error);\n    }\n  }\n  async function handleDeleteAlbum(artistName, albumTitle) {\n    try {\n      await Axios.delete(`http://localhost:4000/api/deleteAlbum/${artistName}/${albumTitle}`);\n      setList(list => list.map(artist => artist.name === artistName ? {\n        ...artist,\n        albums: artist.albums.filter(album => album.title !== albumTitle)\n      } : artist));\n      setSelectedAlbum(null);\n      setSelectedArtist(prevSelectedArtist => ({\n        ...prevSelectedArtist,\n        albums: prevSelectedArtist.albums.filter(album => album.title !== albumTitle)\n      }));\n    } catch (error) {\n      console.error(\"Error deleting album:\", error);\n    }\n  }\n  async function handleDeleteSong(artistName, albumTitle, songTitle) {\n    try {\n      await Axios.delete(`http://localhost:4000/api/deleteSong/${artistName}/${albumTitle}/${songTitle}`);\n      setList(prevList => prevList.map(artist => artist.name === artistName ? {\n        ...artist,\n        albums: artist.albums.map(album => album.title === albumTitle ? {\n          ...album,\n          songs: album.songs.filter(song => song.title !== songTitle)\n        } : album)\n      } : artist));\n      setSelectedAlbum(prevSelectedAlbum => prevSelectedAlbum && prevSelectedAlbum.title === albumTitle ? {\n        ...prevSelectedAlbum,\n        songs: prevSelectedAlbum.songs.filter(song => song.title !== songTitle)\n      } : prevSelectedAlbum);\n      setSelectedArtist(prevSelectedArtist => ({\n        ...prevSelectedArtist,\n        albums: prevSelectedArtist.albums.map(album => album.title === albumTitle ? {\n          ...album,\n          songs: album.songs.filter(song => song.title !== songTitle)\n        } : album)\n      }));\n    } catch (error) {\n      console.error(\"Error deleting song:\", error);\n    }\n  }\n  async function handleUpdateArtist(oldName, newName) {\n    try {\n      await Axios.put(`http://localhost:4000/api/updateArtist/`, {\n        oldName,\n        newName\n      });\n      setList(list => list.map(artist => artist.name === oldName ? {\n        ...artist,\n        name: newName\n      } : artist));\n      if (selectedArtist && selectedArtist.name === oldName) {\n        setSelectedArtist(prevSelectedArtist => ({\n          ...prevSelectedArtist,\n          name: newName\n        }));\n      }\n    } catch (error) {\n      console.error(\"Error updating artist:\", error);\n    }\n  }\n  async function handleUpdateAlbum(artistName, oldTitle, newTitle, newDescription) {\n    try {\n      await Axios.put(`http://localhost:4000/api/updateAlbum/`, {\n        artistName,\n        oldTitle,\n        newTitle,\n        newDescription\n      });\n      setList(list => list.map(artist => artist.name === artistName ? {\n        ...artist,\n        albums: artist.albums.map(album => album.title === oldTitle ? {\n          ...album,\n          title: newTitle,\n          description: newDescription\n        } : album)\n      } : artist));\n      if (selectedAlbum && selectedAlbum.title === oldTitle) {\n        setSelectedAlbum(prevSelectedAlbum => ({\n          ...prevSelectedAlbum,\n          title: newTitle,\n          description: newDescription\n        }));\n      }\n      setSelectedArtist(prevSelectedArtist => ({\n        ...prevSelectedArtist,\n        albums: prevSelectedArtist.albums.map(album => album.title === oldTitle ? {\n          ...album,\n          title: newTitle,\n          description: newDescription\n        } : album)\n      }));\n    } catch (error) {\n      console.error(\"Error updating album:\", error);\n    }\n  }\n  async function handleUpdateSong(artistName, albumTitle, oldTitle, newTitle, newLength) {\n    try {\n      await Axios.put(`http://localhost:4000/api/updateSong/`, {\n        artistName,\n        albumTitle,\n        oldTitle,\n        newTitle,\n        newLength\n      });\n      setList(list => list.map(artist => artist.name === artistName ? {\n        ...artist,\n        albums: artist.albums.map(album => album.title === albumTitle ? {\n          ...album,\n          songs: album.songs.map(song => song.title === oldTitle ? {\n            ...song,\n            title: newTitle,\n            length: newLength\n          } : song)\n        } : album)\n      } : artist));\n      if (selectedAlbum && selectedAlbum.title === albumTitle) {\n        setSelectedAlbum(prevSelectedAlbum => ({\n          ...prevSelectedAlbum,\n          songs: prevSelectedAlbum.songs.map(song => song.title === oldTitle ? {\n            ...song,\n            title: newTitle,\n            length: newLength\n          } : song)\n        }));\n      }\n      setSelectedArtist(prevSelectedArtist => ({\n        ...prevSelectedArtist,\n        albums: prevSelectedArtist.albums.map(album => album.title === albumTitle ? {\n          ...album,\n          songs: album.songs.map(song => song.title === oldTitle ? {\n            ...song,\n            title: newTitle,\n            length: newLength\n          } : song)\n        } : album)\n      }));\n    } catch (error) {\n      console.error(\"Error updating song:\", error);\n    }\n  }\n  async function handleAddArtist(event) {\n    event.preventDefault();\n    try {\n      await Axios.post(`http://localhost:4000/api/addArtist`, {\n        name: newArtistName\n      });\n      setList(prevList => [...prevList, {\n        name: newArtistName,\n        albums: []\n      }]);\n      setNewArtistName(\"\");\n    } catch (error) {\n      console.error(\"Error adding artist:\", error);\n    }\n  }\n  async function handleAddAlbum(event) {\n    event.preventDefault();\n    const currentArtistName = selectedArtist.name;\n    try {\n      await Axios.post(`http://localhost:4000/api/addAlbum`, {\n        artistName: currentArtistName,\n        albumTitle: newAlbumName\n      });\n      const updatedList = list.map(artist => artist.name === currentArtistName ? {\n        ...artist,\n        albums: [...artist.albums, {\n          title: newAlbumName,\n          songs: [],\n          description: \"\"\n        }]\n      } : artist);\n      setList([...updatedList]);\n      const updatedSelectedArtist = updatedList.find(artist => artist.name === currentArtistName);\n      setSelectedArtist(updatedSelectedArtist);\n      setNewAlbumName(\"\");\n    } catch (error) {\n      console.error(\"Error adding album:\", error);\n    }\n  }\n  async function handleAddSong(event) {\n    event.preventDefault();\n    if (!selectedArtist || !selectedAlbum) {\n      console.error(\"Selected artist or album is not defined\");\n      return;\n    }\n    const currentArtistName = selectedArtist.name;\n    const currentAlbumTitle = selectedAlbum.title;\n    try {\n      console.log(\"Sending data to backend:\", {\n        artistName: currentArtistName,\n        albumTitle: currentAlbumTitle,\n        songTitle: newSongName,\n        songLength: newSongLength\n      });\n\n      // Send request to add song to backend\n      const response = await Axios.post(`http://localhost:4000/api/addSong`, {\n        artistName: currentArtistName,\n        albumTitle: currentAlbumTitle,\n        songTitle: newSongName,\n        songLength: newSongLength\n      });\n      console.log(\"Backend response:\", response.data);\n      setList(prevList => prevList.map(artist => artist.name === currentArtistName ? {\n        ...artist,\n        albums: artist.albums.map(album => album.title === currentAlbumTitle ? {\n          ...album,\n          songs: [...album.songs, {\n            title: newSongName,\n            length: newSongLength\n          }]\n        } : album)\n      } : artist));\n      setSelectedArtist(null);\n      setSelectedAlbum(null);\n      setSelectedArtist(currentArtistName);\n      setSelectedAlbum(currentAlbumTitle);\n      setNewSongName(\"\");\n      setNewSongLength(\"0:00\");\n    } catch (error) {\n      console.error(\"Error adding song:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        title: \"Artists \\uD83C\\uDFA4\",\n        newEntry: newArtistName,\n        setNewEntry: setNewArtistName,\n        handleAdd: handleAddArtist,\n        children: /*#__PURE__*/_jsxDEV(ArtistList, {\n          list: list,\n          onSelectArtist: handleSelectArtist,\n          onDeleteArtist: handleDeleteArtist,\n          onUpdateArtist: handleUpdateArtist,\n          selectedArtist: selectedArtist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        title: \"Albums \\uD83D\\uDCBF\",\n        newEntry: newAlbumName,\n        setNewEntry: setNewAlbumName,\n        handleAdd: handleAddAlbum,\n        children: selectedArtist ? /*#__PURE__*/_jsxDEV(AlbumList, {\n          artist: selectedArtist,\n          onSelectAlbum: handleSelectAlbum,\n          onDeleteAlbum: handleDeleteAlbum,\n          onUpdateAlbum: handleUpdateAlbum,\n          selectedAlbum: selectedAlbum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center-text-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select an artist first in order to see the albums. \\uD83D\\uDC48\\uD83C\\uDFFB\\u26A0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        title: \"Details \\uD83D\\uDCC3\",\n        newEntry: newSongName,\n        setNewEntry: setNewSongName,\n        handleAdd: handleAddSong,\n        children: selectedAlbum ? /*#__PURE__*/_jsxDEV(AlbumDetails, {\n          artist: selectedArtist,\n          album: selectedAlbum,\n          onDeleteSong: handleDeleteSong,\n          onUpdateSong: handleUpdateSong // Pass handleUpdateSong to AlbumDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center-text-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select an album in order to see the details. \\uD83D\\uDC48\\uD83C\\uDFFB\\u26A0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"lvjNFiPpsQxVEv7L4MNTa+jvWPA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Axios","NavBar","Search","Main","Box","ArtistList","AlbumList","AlbumDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","list","setList","selectedArtist","setSelectedArtist","selectedAlbum","setSelectedAlbum","newArtistName","setNewArtistName","newAlbumName","setNewAlbumName","newSongName","setNewSongName","newSongLength","setNewSongLength","get","then","res","data","Array","isArray","console","error","catch","handleSelectArtist","artist","handleSelectAlbum","album","handleDeleteArtist","artistName","delete","filter","name","handleDeleteAlbum","albumTitle","map","albums","title","prevSelectedArtist","handleDeleteSong","songTitle","prevList","songs","song","prevSelectedAlbum","handleUpdateArtist","oldName","newName","put","handleUpdateAlbum","oldTitle","newTitle","newDescription","description","handleUpdateSong","newLength","length","handleAddArtist","event","preventDefault","post","handleAddAlbum","currentArtistName","updatedList","updatedSelectedArtist","find","handleAddSong","currentAlbumTitle","log","songLength","response","children","fileName","_jsxFileName","lineNumber","columnNumber","newEntry","setNewEntry","handleAdd","onSelectArtist","onDeleteArtist","onUpdateArtist","onSelectAlbum","onDeleteAlbum","onUpdateAlbum","className","onDeleteSong","onUpdateSong","_c","$RefreshReg$"],"sources":["C:/Users/whole/Documents/Digital-Music-Library/Digital-Music-Library/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Search from \"./components/Search\";\r\nimport Main from \"./components/Main\";\r\nimport Box from \"./components/Box\";\r\nimport ArtistList from \"./components/ArtistList\";\r\nimport AlbumList from \"./components/AlbumList\";\r\nimport AlbumDetails from \"./components/AlbumDetails\";\r\n\r\nfunction App() {\r\n  const [list, setList] = useState([]);\r\n  const [selectedArtist, setSelectedArtist] = useState(null);\r\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\r\n  const [newArtistName, setNewArtistName] = useState(\"\");\r\n  const [newAlbumName, setNewAlbumName] = useState(\"\");\r\n  const [newSongName, setNewSongName] = useState(\"\");\r\n  const [newSongLength, setNewSongLength] = useState(\"0:00\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:4000/api/retrieveMusicLibrary\")\r\n      .then((res) => {\r\n        const data = res.data;\r\n        if (Array.isArray(data)) {\r\n          setList(data);\r\n        } else {\r\n          console.error(\"Unexpected data structure:\", data);\r\n          setList([]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        setList([]);\r\n      });\r\n  }, []);\r\n\r\n  function handleSelectArtist(artist) {\r\n    setSelectedArtist((selectedArtist) =>\r\n      artist === selectedArtist ? null : artist\r\n    );\r\n    setSelectedAlbum(null); // Reset selected album when a new artist is selected\r\n  }\r\n\r\n  function handleSelectAlbum(album) {\r\n    setSelectedAlbum((selectedAlbum) =>\r\n      album === selectedAlbum ? null : album\r\n    );\r\n  }\r\n\r\n  async function handleDeleteArtist(artistName) {\r\n    try {\r\n      await Axios.delete(\r\n        `http://localhost:4000/api/deleteArtist/${artistName}`\r\n      );\r\n      setList((list) => list.filter((artist) => artist.name !== artistName));\r\n      setSelectedArtist(null);\r\n      setSelectedAlbum(null);\r\n    } catch (error) {\r\n      console.error(\"Error deleting artist:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleDeleteAlbum(artistName, albumTitle) {\r\n    try {\r\n      await Axios.delete(\r\n        `http://localhost:4000/api/deleteAlbum/${artistName}/${albumTitle}`\r\n      );\r\n      setList((list) =>\r\n        list.map((artist) =>\r\n          artist.name === artistName\r\n            ? {\r\n                ...artist,\r\n                albums: artist.albums.filter(\r\n                  (album) => album.title !== albumTitle\r\n                ),\r\n              }\r\n            : artist\r\n        )\r\n      );\r\n      setSelectedAlbum(null);\r\n      setSelectedArtist((prevSelectedArtist) => ({\r\n        ...prevSelectedArtist,\r\n        albums: prevSelectedArtist.albums.filter(\r\n          (album) => album.title !== albumTitle\r\n        ),\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error deleting album:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleDeleteSong(artistName, albumTitle, songTitle) {\r\n    try {\r\n      await Axios.delete(\r\n        `http://localhost:4000/api/deleteSong/${artistName}/${albumTitle}/${songTitle}`\r\n      );\r\n\r\n      setList((prevList) =>\r\n        prevList.map((artist) =>\r\n          artist.name === artistName\r\n            ? {\r\n                ...artist,\r\n                albums: artist.albums.map((album) =>\r\n                  album.title === albumTitle\r\n                    ? {\r\n                        ...album,\r\n                        songs: album.songs.filter(\r\n                          (song) => song.title !== songTitle\r\n                        ),\r\n                      }\r\n                    : album\r\n                ),\r\n              }\r\n            : artist\r\n        )\r\n      );\r\n\r\n      setSelectedAlbum((prevSelectedAlbum) =>\r\n        prevSelectedAlbum && prevSelectedAlbum.title === albumTitle\r\n          ? {\r\n              ...prevSelectedAlbum,\r\n              songs: prevSelectedAlbum.songs.filter(\r\n                (song) => song.title !== songTitle\r\n              ),\r\n            }\r\n          : prevSelectedAlbum\r\n      );\r\n\r\n      setSelectedArtist((prevSelectedArtist) => ({\r\n        ...prevSelectedArtist,\r\n        albums: prevSelectedArtist.albums.map((album) =>\r\n          album.title === albumTitle\r\n            ? {\r\n                ...album,\r\n                songs: album.songs.filter((song) => song.title !== songTitle),\r\n              }\r\n            : album\r\n        ),\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error deleting song:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleUpdateArtist(oldName, newName) {\r\n    try {\r\n      await Axios.put(`http://localhost:4000/api/updateArtist/`, {\r\n        oldName,\r\n        newName,\r\n      });\r\n      setList((list) =>\r\n        list.map((artist) =>\r\n          artist.name === oldName\r\n            ? {\r\n                ...artist,\r\n                name: newName,\r\n              }\r\n            : artist\r\n        )\r\n      );\r\n\r\n      if (selectedArtist && selectedArtist.name === oldName) {\r\n        setSelectedArtist((prevSelectedArtist) => ({\r\n          ...prevSelectedArtist,\r\n          name: newName,\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating artist:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleUpdateAlbum(\r\n    artistName,\r\n    oldTitle,\r\n    newTitle,\r\n    newDescription\r\n  ) {\r\n    try {\r\n      await Axios.put(`http://localhost:4000/api/updateAlbum/`, {\r\n        artistName,\r\n        oldTitle,\r\n        newTitle,\r\n        newDescription,\r\n      });\r\n      setList((list) =>\r\n        list.map((artist) =>\r\n          artist.name === artistName\r\n            ? {\r\n                ...artist,\r\n                albums: artist.albums.map((album) =>\r\n                  album.title === oldTitle\r\n                    ? { ...album, title: newTitle, description: newDescription }\r\n                    : album\r\n                ),\r\n              }\r\n            : artist\r\n        )\r\n      );\r\n\r\n      if (selectedAlbum && selectedAlbum.title === oldTitle) {\r\n        setSelectedAlbum((prevSelectedAlbum) => ({\r\n          ...prevSelectedAlbum,\r\n          title: newTitle,\r\n          description: newDescription,\r\n        }));\r\n      }\r\n\r\n      setSelectedArtist((prevSelectedArtist) => ({\r\n        ...prevSelectedArtist,\r\n        albums: prevSelectedArtist.albums.map((album) =>\r\n          album.title === oldTitle\r\n            ? { ...album, title: newTitle, description: newDescription }\r\n            : album\r\n        ),\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error updating album:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleUpdateSong(\r\n    artistName,\r\n    albumTitle,\r\n    oldTitle,\r\n    newTitle,\r\n    newLength\r\n  ) {\r\n    try {\r\n      await Axios.put(`http://localhost:4000/api/updateSong/`, {\r\n        artistName,\r\n        albumTitle,\r\n        oldTitle,\r\n        newTitle,\r\n        newLength,\r\n      });\r\n\r\n      setList((list) =>\r\n        list.map((artist) =>\r\n          artist.name === artistName\r\n            ? {\r\n                ...artist,\r\n                albums: artist.albums.map((album) =>\r\n                  album.title === albumTitle\r\n                    ? {\r\n                        ...album,\r\n                        songs: album.songs.map((song) =>\r\n                          song.title === oldTitle\r\n                            ? { ...song, title: newTitle, length: newLength }\r\n                            : song\r\n                        ),\r\n                      }\r\n                    : album\r\n                ),\r\n              }\r\n            : artist\r\n        )\r\n      );\r\n\r\n      if (selectedAlbum && selectedAlbum.title === albumTitle) {\r\n        setSelectedAlbum((prevSelectedAlbum) => ({\r\n          ...prevSelectedAlbum,\r\n          songs: prevSelectedAlbum.songs.map((song) =>\r\n            song.title === oldTitle\r\n              ? { ...song, title: newTitle, length: newLength }\r\n              : song\r\n          ),\r\n        }));\r\n      }\r\n\r\n      setSelectedArtist((prevSelectedArtist) => ({\r\n        ...prevSelectedArtist,\r\n        albums: prevSelectedArtist.albums.map((album) =>\r\n          album.title === albumTitle\r\n            ? {\r\n                ...album,\r\n                songs: album.songs.map((song) =>\r\n                  song.title === oldTitle\r\n                    ? { ...song, title: newTitle, length: newLength }\r\n                    : song\r\n                ),\r\n              }\r\n            : album\r\n        ),\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error updating song:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleAddArtist(event) {\r\n    event.preventDefault();\r\n    try {\r\n      await Axios.post(`http://localhost:4000/api/addArtist`, {\r\n        name: newArtistName,\r\n      });\r\n      setList((prevList) => [...prevList, { name: newArtistName, albums: [] }]);\r\n      setNewArtistName(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding artist:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleAddAlbum(event) {\r\n    event.preventDefault();\r\n    const currentArtistName = selectedArtist.name;\r\n    try {\r\n      await Axios.post(`http://localhost:4000/api/addAlbum`, {\r\n        artistName: currentArtistName,\r\n        albumTitle: newAlbumName,\r\n      });\r\n\r\n      const updatedList = list.map((artist) =>\r\n        artist.name === currentArtistName\r\n          ? {\r\n              ...artist,\r\n              albums: [\r\n                ...artist.albums,\r\n                {\r\n                  title: newAlbumName,\r\n                  songs: [],\r\n                  description: \"\",\r\n                },\r\n              ],\r\n            }\r\n          : artist\r\n      );\r\n\r\n      setList([...updatedList]);\r\n\r\n      const updatedSelectedArtist = updatedList.find(\r\n        (artist) => artist.name === currentArtistName\r\n      );\r\n\r\n      setSelectedArtist(updatedSelectedArtist);\r\n\r\n      setNewAlbumName(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding album:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleAddSong(event) {\r\n    event.preventDefault();\r\n\r\n    if (!selectedArtist || !selectedAlbum) {\r\n      console.error(\"Selected artist or album is not defined\");\r\n      return;\r\n    }\r\n\r\n    const currentArtistName = selectedArtist.name;\r\n    const currentAlbumTitle = selectedAlbum.title;\r\n\r\n    try {\r\n      console.log(\"Sending data to backend:\", {\r\n        artistName: currentArtistName,\r\n        albumTitle: currentAlbumTitle,\r\n        songTitle: newSongName,\r\n        songLength: newSongLength,\r\n      });\r\n\r\n      // Send request to add song to backend\r\n      const response = await Axios.post(`http://localhost:4000/api/addSong`, {\r\n        artistName: currentArtistName,\r\n        albumTitle: currentAlbumTitle,\r\n        songTitle: newSongName,\r\n        songLength: newSongLength,\r\n      });\r\n\r\n      console.log(\"Backend response:\", response.data);\r\n\r\n      setList((prevList) =>\r\n        prevList.map((artist) =>\r\n          artist.name === currentArtistName\r\n            ? {\r\n                ...artist,\r\n                albums: artist.albums.map((album) =>\r\n                  album.title === currentAlbumTitle\r\n                    ? {\r\n                        ...album,\r\n                        songs: [\r\n                          ...album.songs,\r\n                          { title: newSongName, length: newSongLength },\r\n                        ],\r\n                      }\r\n                    : album\r\n                ),\r\n              }\r\n            : artist\r\n        )\r\n      );\r\n      setSelectedArtist(null);\r\n      setSelectedAlbum(null);\r\n\r\n      setSelectedArtist(currentArtistName);\r\n      setSelectedAlbum(currentAlbumTitle);\r\n\r\n      setNewSongName(\"\");\r\n      setNewSongLength(\"0:00\");\r\n    } catch (error) {\r\n      console.error(\"Error adding song:\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar>\r\n        <Search />\r\n      </NavBar>\r\n\r\n      <Main>\r\n        <Box\r\n          title=\"Artists 🎤\"\r\n          newEntry={newArtistName}\r\n          setNewEntry={setNewArtistName}\r\n          handleAdd={handleAddArtist}\r\n        >\r\n          <ArtistList\r\n            list={list}\r\n            onSelectArtist={handleSelectArtist}\r\n            onDeleteArtist={handleDeleteArtist}\r\n            onUpdateArtist={handleUpdateArtist}\r\n            selectedArtist={selectedArtist}\r\n          />\r\n        </Box>\r\n        <Box\r\n          title=\"Albums 💿\"\r\n          newEntry={newAlbumName}\r\n          setNewEntry={setNewAlbumName}\r\n          handleAdd={handleAddAlbum}\r\n        >\r\n          {selectedArtist ? (\r\n            <AlbumList\r\n              artist={selectedArtist}\r\n              onSelectAlbum={handleSelectAlbum}\r\n              onDeleteAlbum={handleDeleteAlbum}\r\n              onUpdateAlbum={handleUpdateAlbum}\r\n              selectedAlbum={selectedAlbum}\r\n            />\r\n          ) : (\r\n            <div className=\"center-text-container\">\r\n              <p>Select an artist first in order to see the albums. 👈🏻⚠️</p>\r\n            </div>\r\n          )}\r\n        </Box>\r\n        <Box\r\n          title=\"Details 📃\"\r\n          newEntry={newSongName}\r\n          setNewEntry={setNewSongName}\r\n          handleAdd={handleAddSong}\r\n        >\r\n          {selectedAlbum ? (\r\n            <AlbumDetails\r\n              artist={selectedArtist}\r\n              album={selectedAlbum}\r\n              onDeleteSong={handleDeleteSong}\r\n              onUpdateSong={handleUpdateSong} // Pass handleUpdateSong to AlbumDetails\r\n            />\r\n          ) : (\r\n            <div className=\"center-text-container\">\r\n              <p>Select an album in order to see the details. 👈🏻⚠️</p>\r\n            </div>\r\n          )}\r\n        </Box>\r\n      </Main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
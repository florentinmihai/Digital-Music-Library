{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\whole\\\\Documents\\\\Digital-Music-Library\\\\Digital-Music-Library\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport NavBar from \"./components/NavBar\";\nimport Search from \"./components/Search\";\nimport Main from \"./components/Main\";\nimport Box from \"./components/Box\";\nimport ArtistList from \"./components/ArtistList\";\nimport AlbumList from \"./components/AlbumList\";\nimport AlbumDetails from \"./components/AlbumDetails\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [list, setList] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(null);\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\n  const [newArtistName, setNewArtistName] = useState(\"\");\n  const [newAlbumName, setNewAlbumName] = useState(\"\");\n  const [newSongName, setNewSongName] = useState(\"\");\n  const [newSongLength, setNewSongLength] = useState(\"\");\n  const [searchFilter, setSearchFilter] = useState(\"artists\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [allArtists, setAllArtists] = useState([]);\n  const [allAlbums, setAllAlbums] = useState([]);\n  const [allSongs, setAllSongs] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:4000/api/retrieveMusicLibrary\").then(res => {\n      const data = res.data;\n      if (Array.isArray(data)) {\n        setList(data);\n        updateAllStates(data);\n      } else {\n        console.error(\"Unexpected data structure:\", data);\n        setList([]);\n        updateAllStates([]);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n      setList([]);\n      updateAllStates([]);\n    });\n  }, []);\n  useEffect(() => {\n    updateAllStates(list);\n  }, [list]);\n  const updateAllStates = list => {\n    const artists = list.map(artist => artist.name);\n    const albums = list.flatMap(artist => artist.albums.map(album => album.title));\n    const songs = list.flatMap(artist => artist.albums.flatMap(album => album.songs.map(song => song.title)));\n    setAllArtists(artists);\n    setAllAlbums(albums);\n    setAllSongs(songs);\n  };\n  console.log(allAlbums);\n  console.log(allSongs);\n  const handleSearch = (filter, query) => {\n    setSearchFilter(filter);\n    setSearchQuery(query.toLowerCase());\n  };\n  const filteredList = list.filter(artist => {\n    if (searchFilter === \"artists\") {\n      return artist.name.toLowerCase().includes(searchQuery);\n    } else if (searchFilter === \"albums\") {\n      return artist.albums.some(album => album.title.toLowerCase().includes(searchQuery));\n    } else if (searchFilter === \"songs\") {\n      return artist.albums.some(album => album.songs.some(song => song.title.toLowerCase().includes(searchQuery)));\n    }\n    return false;\n  });\n  function handleSelectArtist(artist) {\n    setSelectedArtist(selectedArtist => artist === selectedArtist ? null : artist);\n    setSelectedAlbum(null); // Reset selected album when a new artist is selected\n  }\n  function handleSelectAlbum(album) {\n    setSelectedAlbum(selectedAlbum => album === selectedAlbum ? null : album);\n  }\n  async function handleDeleteArtist(artistName) {\n    try {\n      await Axios.delete(`http://localhost:4000/api/deleteArtist/${artistName}`);\n      setList(list => list.filter(artist => artist.name !== artistName));\n      setSelectedArtist(null);\n      setSelectedAlbum(null);\n    } catch (error) {\n      console.error(\"Error deleting artist:\", error);\n    }\n  }\n  async function handleDeleteAlbum(artistName, albumTitle) {\n    try {\n      await Axios.delete(`http://localhost:4000/api/deleteAlbum/${artistName}/${albumTitle}`);\n      setList(list => list.map(artist => artist.name === artistName ? {\n        ...artist,\n        albums: artist.albums.filter(album => album.title !== albumTitle)\n      } : artist));\n      setSelectedAlbum(null);\n      setSelectedArtist(prevSelectedArtist => ({\n        ...prevSelectedArtist,\n        albums: prevSelectedArtist.albums.filter(album => album.title !== albumTitle)\n      }));\n    } catch (error) {\n      console.error(\"Error deleting album:\", error);\n    }\n  }\n  async function handleDeleteSong(artistName, albumTitle, songTitle) {\n    try {\n      await Axios.delete(`http://localhost:4000/api/deleteSong/${artistName}/${albumTitle}/${songTitle}`);\n      setList(prevList => prevList.map(artist => artist.name === artistName ? {\n        ...artist,\n        albums: artist.albums.map(album => album.title === albumTitle ? {\n          ...album,\n          songs: album.songs.filter(song => song.title !== songTitle)\n        } : album)\n      } : artist));\n      setSelectedAlbum(prevSelectedAlbum => prevSelectedAlbum && prevSelectedAlbum.title === albumTitle ? {\n        ...prevSelectedAlbum,\n        songs: prevSelectedAlbum.songs.filter(song => song.title !== songTitle)\n      } : prevSelectedAlbum);\n      setSelectedArtist(prevSelectedArtist => ({\n        ...prevSelectedArtist,\n        albums: prevSelectedArtist.albums.map(album => album.title === albumTitle ? {\n          ...album,\n          songs: album.songs.filter(song => song.title !== songTitle)\n        } : album)\n      }));\n    } catch (error) {\n      console.error(\"Error deleting song:\", error);\n    }\n  }\n  async function handleUpdateArtist(oldName, newName) {\n    try {\n      await Axios.put(`http://localhost:4000/api/updateArtist/`, {\n        oldName,\n        newName\n      });\n      setList(list => list.map(artist => artist.name === oldName ? {\n        ...artist,\n        name: newName\n      } : artist));\n      if (selectedArtist && selectedArtist.name === oldName) {\n        setSelectedArtist(prevSelectedArtist => ({\n          ...prevSelectedArtist,\n          name: newName\n        }));\n      }\n    } catch (error) {\n      console.error(\"Error updating artist:\", error);\n    }\n  }\n  async function handleUpdateAlbum(artistName, oldTitle, newTitle, newDescription) {\n    try {\n      await Axios.put(`http://localhost:4000/api/updateAlbum/`, {\n        artistName,\n        oldTitle,\n        newTitle,\n        newDescription\n      });\n      setList(list => list.map(artist => artist.name === artistName ? {\n        ...artist,\n        albums: artist.albums.map(album => album.title === oldTitle ? {\n          ...album,\n          title: newTitle,\n          description: newDescription\n        } : album)\n      } : artist));\n      if (selectedAlbum && selectedAlbum.title === oldTitle) {\n        setSelectedAlbum(prevSelectedAlbum => ({\n          ...prevSelectedAlbum,\n          title: newTitle,\n          description: newDescription\n        }));\n      }\n      setSelectedArtist(prevSelectedArtist => ({\n        ...prevSelectedArtist,\n        albums: prevSelectedArtist.albums.map(album => album.title === oldTitle ? {\n          ...album,\n          title: newTitle,\n          description: newDescription\n        } : album)\n      }));\n    } catch (error) {\n      console.error(\"Error updating album:\", error);\n    }\n  }\n  async function handleUpdateSong(artistName, albumTitle, oldTitle, newTitle, newLength) {\n    try {\n      await Axios.put(`http://localhost:4000/api/updateSong/`, {\n        artistName,\n        albumTitle,\n        oldTitle,\n        newTitle,\n        newLength\n      });\n      setList(list => list.map(artist => artist.name === artistName ? {\n        ...artist,\n        albums: artist.albums.map(album => album.title === albumTitle ? {\n          ...album,\n          songs: album.songs.map(song => song.title === oldTitle ? {\n            ...song,\n            title: newTitle,\n            length: newLength\n          } : song)\n        } : album)\n      } : artist));\n      if (selectedAlbum && selectedAlbum.title === albumTitle) {\n        setSelectedAlbum(prevSelectedAlbum => ({\n          ...prevSelectedAlbum,\n          songs: prevSelectedAlbum.songs.map(song => song.title === oldTitle ? {\n            ...song,\n            title: newTitle,\n            length: newLength\n          } : song)\n        }));\n      }\n      setSelectedArtist(prevSelectedArtist => ({\n        ...prevSelectedArtist,\n        albums: prevSelectedArtist.albums.map(album => album.title === albumTitle ? {\n          ...album,\n          songs: album.songs.map(song => song.title === oldTitle ? {\n            ...song,\n            title: newTitle,\n            length: newLength\n          } : song)\n        } : album)\n      }));\n    } catch (error) {\n      console.error(\"Error updating song:\", error);\n    }\n  }\n  async function handleAddArtist(event) {\n    event.preventDefault();\n    try {\n      await Axios.post(`http://localhost:4000/api/addArtist`, {\n        name: newArtistName\n      });\n      setList(prevList => [...prevList, {\n        name: newArtistName,\n        albums: []\n      }]);\n      setNewArtistName(\"\");\n    } catch (error) {\n      console.error(\"Error adding artist:\", error);\n    }\n  }\n  async function handleAddAlbum(event) {\n    event.preventDefault();\n    if (!selectedArtist) {\n      console.error(\"No artist selected\");\n      return;\n    }\n    const currentArtistName = selectedArtist.name;\n    try {\n      await Axios.post(`http://localhost:4000/api/addAlbum`, {\n        artistName: currentArtistName,\n        albumTitle: newAlbumName\n      });\n      const updatedList = list.map(artist => artist.name === currentArtistName ? {\n        ...artist,\n        albums: [...artist.albums, {\n          title: newAlbumName,\n          songs: [],\n          description: \"\"\n        }]\n      } : artist);\n      setList([...updatedList]);\n      const updatedSelectedArtist = updatedList.find(artist => artist.name === currentArtistName);\n      setSelectedArtist(updatedSelectedArtist);\n      setNewAlbumName(\"\");\n    } catch (error) {\n      console.error(\"Error adding album:\", error);\n    }\n  }\n  async function handleAddSong(event) {\n    event.preventDefault();\n    if (!selectedArtist || !selectedAlbum) {\n      console.error(\"Selected artist or album is not defined\");\n      return;\n    }\n    const currentArtistName = selectedArtist.name;\n    const currentAlbumTitle = selectedAlbum.title;\n    try {\n      console.log(\"Sending data to backend:\", {\n        artistName: currentArtistName,\n        albumTitle: currentAlbumTitle,\n        songTitle: newSongName,\n        songLength: newSongLength\n      });\n\n      // Send request to add song to backend\n      const response = await Axios.post(`http://localhost:4000/api/addSong`, {\n        artistName: currentArtistName,\n        albumTitle: currentAlbumTitle,\n        songTitle: newSongName,\n        songLength: newSongLength\n      });\n      console.log(\"Backend response:\", response.data);\n      const updatedList = list.map(artist => artist.name === currentArtistName ? {\n        ...artist,\n        albums: artist.albums.map(album => album.title === currentAlbumTitle ? {\n          ...album,\n          songs: [...album.songs, {\n            title: newSongName,\n            length: newSongLength\n          }]\n        } : album)\n      } : artist);\n      setList(updatedList);\n      const updatedSelectedArtist = updatedList.find(artist => artist.name === currentArtistName);\n      setSelectedArtist(updatedSelectedArtist);\n      const updatedSelectedAlbum = updatedSelectedArtist.albums.find(album => album.title === currentAlbumTitle);\n      setSelectedAlbum(updatedSelectedAlbum);\n      setNewSongName(\"\");\n      setNewSongLength(\"\");\n    } catch (error) {\n      console.error(\"Error adding song:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        onSearch: handleSearch,\n        allArtists: allArtists,\n        allAlbums: allAlbums,\n        allSongs: allSongs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        title: \"Artists \\uD83C\\uDFA4\",\n        newEntry: newArtistName,\n        setNewEntry: setNewArtistName,\n        handleAdd: handleAddArtist,\n        children: /*#__PURE__*/_jsxDEV(ArtistList, {\n          list: searchFilter === \"artists\" ? filteredList : list,\n          onSelectArtist: handleSelectArtist,\n          onDeleteArtist: handleDeleteArtist,\n          onUpdateArtist: handleUpdateArtist,\n          selectedArtist: selectedArtist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        title: \"Albums \\uD83D\\uDCBF\",\n        newEntry: newAlbumName,\n        setNewEntry: setNewAlbumName,\n        handleAdd: handleAddAlbum,\n        children: selectedArtist ? /*#__PURE__*/_jsxDEV(AlbumList, {\n          artist: selectedArtist,\n          onSelectAlbum: handleSelectAlbum,\n          onDeleteAlbum: handleDeleteAlbum,\n          onUpdateAlbum: handleUpdateAlbum,\n          selectedAlbum: selectedAlbum,\n          filteredAlbums: searchFilter === \"albums\" ? selectedArtist.albums.filter(album => album.title.toLowerCase().includes(searchQuery)) : selectedArtist.albums\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"box-text-no-data\",\n            children: \"Select an artist in order to see the albums. \\u26A0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        title: \"Songs \\uD83C\\uDFB5\",\n        newEntry: newSongName,\n        setNewEntry: setNewSongName,\n        handleAdd: handleAddSong,\n        newSongLength: newSongLength,\n        setNewSongLength: setNewSongLength,\n        children: selectedAlbum ? /*#__PURE__*/_jsxDEV(AlbumDetails, {\n          artist: selectedArtist,\n          album: selectedAlbum,\n          onDeleteSong: handleDeleteSong,\n          onUpdateSong: handleUpdateSong,\n          filteredSongs: searchFilter === \"songs\" ? selectedAlbum.songs.filter(song => song.title.toLowerCase().includes(searchQuery)) : selectedAlbum.songs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"box-text-no-data\",\n            children: \"Select an album in order to see the description and the songs . \\u26A0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"4mBg/UxKGiLLI9VQk8zPbNr0QF4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Axios","NavBar","Search","Main","Box","ArtistList","AlbumList","AlbumDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","list","setList","selectedArtist","setSelectedArtist","selectedAlbum","setSelectedAlbum","newArtistName","setNewArtistName","newAlbumName","setNewAlbumName","newSongName","setNewSongName","newSongLength","setNewSongLength","searchFilter","setSearchFilter","searchQuery","setSearchQuery","allArtists","setAllArtists","allAlbums","setAllAlbums","allSongs","setAllSongs","get","then","res","data","Array","isArray","updateAllStates","console","error","catch","artists","map","artist","name","albums","flatMap","album","title","songs","song","log","handleSearch","filter","query","toLowerCase","filteredList","includes","some","handleSelectArtist","handleSelectAlbum","handleDeleteArtist","artistName","delete","handleDeleteAlbum","albumTitle","prevSelectedArtist","handleDeleteSong","songTitle","prevList","prevSelectedAlbum","handleUpdateArtist","oldName","newName","put","handleUpdateAlbum","oldTitle","newTitle","newDescription","description","handleUpdateSong","newLength","length","handleAddArtist","event","preventDefault","post","handleAddAlbum","currentArtistName","updatedList","updatedSelectedArtist","find","handleAddSong","currentAlbumTitle","songLength","response","updatedSelectedAlbum","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","newEntry","setNewEntry","handleAdd","onSelectArtist","onDeleteArtist","onUpdateArtist","onSelectAlbum","onDeleteAlbum","onUpdateAlbum","filteredAlbums","className","onDeleteSong","onUpdateSong","filteredSongs","_c","$RefreshReg$"],"sources":["C:/Users/whole/Documents/Digital-Music-Library/Digital-Music-Library/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Search from \"./components/Search\";\r\nimport Main from \"./components/Main\";\r\nimport Box from \"./components/Box\";\r\nimport ArtistList from \"./components/ArtistList\";\r\nimport AlbumList from \"./components/AlbumList\";\r\nimport AlbumDetails from \"./components/AlbumDetails\";\r\n\r\nfunction App() {\r\n  const [list, setList] = useState([]);\r\n  const [selectedArtist, setSelectedArtist] = useState(null);\r\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\r\n  const [newArtistName, setNewArtistName] = useState(\"\");\r\n  const [newAlbumName, setNewAlbumName] = useState(\"\");\r\n  const [newSongName, setNewSongName] = useState(\"\");\r\n  const [newSongLength, setNewSongLength] = useState(\"\");\r\n  const [searchFilter, setSearchFilter] = useState(\"artists\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [allArtists, setAllArtists] = useState([]);\r\n  const [allAlbums, setAllAlbums] = useState([]);\r\n  const [allSongs, setAllSongs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:4000/api/retrieveMusicLibrary\")\r\n      .then((res) => {\r\n        const data = res.data;\r\n        if (Array.isArray(data)) {\r\n          setList(data);\r\n          updateAllStates(data);\r\n        } else {\r\n          console.error(\"Unexpected data structure:\", data);\r\n          setList([]);\r\n          updateAllStates([]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        setList([]);\r\n        updateAllStates([]);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateAllStates(list);\r\n  }, [list]);\r\n\r\n  const updateAllStates = (list) => {\r\n    const artists = list.map((artist) => artist.name);\r\n    const albums = list.flatMap((artist) =>\r\n      artist.albums.map((album) => album.title)\r\n    );\r\n    const songs = list.flatMap((artist) =>\r\n      artist.albums.flatMap((album) => album.songs.map((song) => song.title))\r\n    );\r\n\r\n    setAllArtists(artists);\r\n    setAllAlbums(albums);\r\n    setAllSongs(songs);\r\n  };\r\n\r\n  console.log(allAlbums);\r\n  console.log(allSongs);\r\n\r\n  const handleSearch = (filter, query) => {\r\n    setSearchFilter(filter);\r\n    setSearchQuery(query.toLowerCase());\r\n  };\r\n\r\n  const filteredList = list.filter((artist) => {\r\n    if (searchFilter === \"artists\") {\r\n      return artist.name.toLowerCase().includes(searchQuery);\r\n    } else if (searchFilter === \"albums\") {\r\n      return artist.albums.some((album) =>\r\n        album.title.toLowerCase().includes(searchQuery)\r\n      );\r\n    } else if (searchFilter === \"songs\") {\r\n      return artist.albums.some((album) =>\r\n        album.songs.some((song) =>\r\n          song.title.toLowerCase().includes(searchQuery)\r\n        )\r\n      );\r\n    }\r\n    return false;\r\n  });\r\n\r\n  function handleSelectArtist(artist) {\r\n    setSelectedArtist((selectedArtist) =>\r\n      artist === selectedArtist ? null : artist\r\n    );\r\n    setSelectedAlbum(null); // Reset selected album when a new artist is selected\r\n  }\r\n\r\n  function handleSelectAlbum(album) {\r\n    setSelectedAlbum((selectedAlbum) =>\r\n      album === selectedAlbum ? null : album\r\n    );\r\n  }\r\n\r\n  async function handleDeleteArtist(artistName) {\r\n    try {\r\n      await Axios.delete(\r\n        `http://localhost:4000/api/deleteArtist/${artistName}`\r\n      );\r\n      setList((list) => list.filter((artist) => artist.name !== artistName));\r\n      setSelectedArtist(null);\r\n      setSelectedAlbum(null);\r\n    } catch (error) {\r\n      console.error(\"Error deleting artist:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleDeleteAlbum(artistName, albumTitle) {\r\n    try {\r\n      await Axios.delete(\r\n        `http://localhost:4000/api/deleteAlbum/${artistName}/${albumTitle}`\r\n      );\r\n      setList((list) =>\r\n        list.map((artist) =>\r\n          artist.name === artistName\r\n            ? {\r\n                ...artist,\r\n                albums: artist.albums.filter(\r\n                  (album) => album.title !== albumTitle\r\n                ),\r\n              }\r\n            : artist\r\n        )\r\n      );\r\n      setSelectedAlbum(null);\r\n      setSelectedArtist((prevSelectedArtist) => ({\r\n        ...prevSelectedArtist,\r\n        albums: prevSelectedArtist.albums.filter(\r\n          (album) => album.title !== albumTitle\r\n        ),\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error deleting album:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleDeleteSong(artistName, albumTitle, songTitle) {\r\n    try {\r\n      await Axios.delete(\r\n        `http://localhost:4000/api/deleteSong/${artistName}/${albumTitle}/${songTitle}`\r\n      );\r\n\r\n      setList((prevList) =>\r\n        prevList.map((artist) =>\r\n          artist.name === artistName\r\n            ? {\r\n                ...artist,\r\n                albums: artist.albums.map((album) =>\r\n                  album.title === albumTitle\r\n                    ? {\r\n                        ...album,\r\n                        songs: album.songs.filter(\r\n                          (song) => song.title !== songTitle\r\n                        ),\r\n                      }\r\n                    : album\r\n                ),\r\n              }\r\n            : artist\r\n        )\r\n      );\r\n\r\n      setSelectedAlbum((prevSelectedAlbum) =>\r\n        prevSelectedAlbum && prevSelectedAlbum.title === albumTitle\r\n          ? {\r\n              ...prevSelectedAlbum,\r\n              songs: prevSelectedAlbum.songs.filter(\r\n                (song) => song.title !== songTitle\r\n              ),\r\n            }\r\n          : prevSelectedAlbum\r\n      );\r\n\r\n      setSelectedArtist((prevSelectedArtist) => ({\r\n        ...prevSelectedArtist,\r\n        albums: prevSelectedArtist.albums.map((album) =>\r\n          album.title === albumTitle\r\n            ? {\r\n                ...album,\r\n                songs: album.songs.filter((song) => song.title !== songTitle),\r\n              }\r\n            : album\r\n        ),\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error deleting song:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleUpdateArtist(oldName, newName) {\r\n    try {\r\n      await Axios.put(`http://localhost:4000/api/updateArtist/`, {\r\n        oldName,\r\n        newName,\r\n      });\r\n      setList((list) =>\r\n        list.map((artist) =>\r\n          artist.name === oldName\r\n            ? {\r\n                ...artist,\r\n                name: newName,\r\n              }\r\n            : artist\r\n        )\r\n      );\r\n\r\n      if (selectedArtist && selectedArtist.name === oldName) {\r\n        setSelectedArtist((prevSelectedArtist) => ({\r\n          ...prevSelectedArtist,\r\n          name: newName,\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating artist:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleUpdateAlbum(\r\n    artistName,\r\n    oldTitle,\r\n    newTitle,\r\n    newDescription\r\n  ) {\r\n    try {\r\n      await Axios.put(`http://localhost:4000/api/updateAlbum/`, {\r\n        artistName,\r\n        oldTitle,\r\n        newTitle,\r\n        newDescription,\r\n      });\r\n      setList((list) =>\r\n        list.map((artist) =>\r\n          artist.name === artistName\r\n            ? {\r\n                ...artist,\r\n                albums: artist.albums.map((album) =>\r\n                  album.title === oldTitle\r\n                    ? { ...album, title: newTitle, description: newDescription }\r\n                    : album\r\n                ),\r\n              }\r\n            : artist\r\n        )\r\n      );\r\n\r\n      if (selectedAlbum && selectedAlbum.title === oldTitle) {\r\n        setSelectedAlbum((prevSelectedAlbum) => ({\r\n          ...prevSelectedAlbum,\r\n          title: newTitle,\r\n          description: newDescription,\r\n        }));\r\n      }\r\n\r\n      setSelectedArtist((prevSelectedArtist) => ({\r\n        ...prevSelectedArtist,\r\n        albums: prevSelectedArtist.albums.map((album) =>\r\n          album.title === oldTitle\r\n            ? { ...album, title: newTitle, description: newDescription }\r\n            : album\r\n        ),\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error updating album:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleUpdateSong(\r\n    artistName,\r\n    albumTitle,\r\n    oldTitle,\r\n    newTitle,\r\n    newLength\r\n  ) {\r\n    try {\r\n      await Axios.put(`http://localhost:4000/api/updateSong/`, {\r\n        artistName,\r\n        albumTitle,\r\n        oldTitle,\r\n        newTitle,\r\n        newLength,\r\n      });\r\n\r\n      setList((list) =>\r\n        list.map((artist) =>\r\n          artist.name === artistName\r\n            ? {\r\n                ...artist,\r\n                albums: artist.albums.map((album) =>\r\n                  album.title === albumTitle\r\n                    ? {\r\n                        ...album,\r\n                        songs: album.songs.map((song) =>\r\n                          song.title === oldTitle\r\n                            ? { ...song, title: newTitle, length: newLength }\r\n                            : song\r\n                        ),\r\n                      }\r\n                    : album\r\n                ),\r\n              }\r\n            : artist\r\n        )\r\n      );\r\n\r\n      if (selectedAlbum && selectedAlbum.title === albumTitle) {\r\n        setSelectedAlbum((prevSelectedAlbum) => ({\r\n          ...prevSelectedAlbum,\r\n          songs: prevSelectedAlbum.songs.map((song) =>\r\n            song.title === oldTitle\r\n              ? { ...song, title: newTitle, length: newLength }\r\n              : song\r\n          ),\r\n        }));\r\n      }\r\n\r\n      setSelectedArtist((prevSelectedArtist) => ({\r\n        ...prevSelectedArtist,\r\n        albums: prevSelectedArtist.albums.map((album) =>\r\n          album.title === albumTitle\r\n            ? {\r\n                ...album,\r\n                songs: album.songs.map((song) =>\r\n                  song.title === oldTitle\r\n                    ? { ...song, title: newTitle, length: newLength }\r\n                    : song\r\n                ),\r\n              }\r\n            : album\r\n        ),\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error updating song:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleAddArtist(event) {\r\n    event.preventDefault();\r\n    try {\r\n      await Axios.post(`http://localhost:4000/api/addArtist`, {\r\n        name: newArtistName,\r\n      });\r\n      setList((prevList) => [...prevList, { name: newArtistName, albums: [] }]);\r\n      setNewArtistName(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding artist:\", error);\r\n    }\r\n  }\r\n  async function handleAddAlbum(event) {\r\n    event.preventDefault();\r\n\r\n    if (!selectedArtist) {\r\n      console.error(\"No artist selected\");\r\n      return;\r\n    }\r\n\r\n    const currentArtistName = selectedArtist.name;\r\n\r\n    try {\r\n      await Axios.post(`http://localhost:4000/api/addAlbum`, {\r\n        artistName: currentArtistName,\r\n        albumTitle: newAlbumName,\r\n      });\r\n\r\n      const updatedList = list.map((artist) =>\r\n        artist.name === currentArtistName\r\n          ? {\r\n              ...artist,\r\n              albums: [\r\n                ...artist.albums,\r\n                {\r\n                  title: newAlbumName,\r\n                  songs: [],\r\n                  description: \"\",\r\n                },\r\n              ],\r\n            }\r\n          : artist\r\n      );\r\n\r\n      setList([...updatedList]);\r\n\r\n      const updatedSelectedArtist = updatedList.find(\r\n        (artist) => artist.name === currentArtistName\r\n      );\r\n\r\n      setSelectedArtist(updatedSelectedArtist);\r\n\r\n      setNewAlbumName(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding album:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleAddSong(event) {\r\n    event.preventDefault();\r\n\r\n    if (!selectedArtist || !selectedAlbum) {\r\n      console.error(\"Selected artist or album is not defined\");\r\n      return;\r\n    }\r\n\r\n    const currentArtistName = selectedArtist.name;\r\n    const currentAlbumTitle = selectedAlbum.title;\r\n\r\n    try {\r\n      console.log(\"Sending data to backend:\", {\r\n        artistName: currentArtistName,\r\n        albumTitle: currentAlbumTitle,\r\n        songTitle: newSongName,\r\n        songLength: newSongLength,\r\n      });\r\n\r\n      // Send request to add song to backend\r\n      const response = await Axios.post(`http://localhost:4000/api/addSong`, {\r\n        artistName: currentArtistName,\r\n        albumTitle: currentAlbumTitle,\r\n        songTitle: newSongName,\r\n        songLength: newSongLength,\r\n      });\r\n\r\n      console.log(\"Backend response:\", response.data);\r\n\r\n      const updatedList = list.map((artist) =>\r\n        artist.name === currentArtistName\r\n          ? {\r\n              ...artist,\r\n              albums: artist.albums.map((album) =>\r\n                album.title === currentAlbumTitle\r\n                  ? {\r\n                      ...album,\r\n                      songs: [\r\n                        ...album.songs,\r\n                        { title: newSongName, length: newSongLength },\r\n                      ],\r\n                    }\r\n                  : album\r\n              ),\r\n            }\r\n          : artist\r\n      );\r\n\r\n      setList(updatedList);\r\n\r\n      const updatedSelectedArtist = updatedList.find(\r\n        (artist) => artist.name === currentArtistName\r\n      );\r\n\r\n      setSelectedArtist(updatedSelectedArtist);\r\n\r\n      const updatedSelectedAlbum = updatedSelectedArtist.albums.find(\r\n        (album) => album.title === currentAlbumTitle\r\n      );\r\n\r\n      setSelectedAlbum(updatedSelectedAlbum);\r\n\r\n      setNewSongName(\"\");\r\n      setNewSongLength(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding song:\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar>\r\n        <Search\r\n          onSearch={handleSearch}\r\n          allArtists={allArtists}\r\n          allAlbums={allAlbums}\r\n          allSongs={allSongs}\r\n        />\r\n      </NavBar>\r\n\r\n      <Main>\r\n        <Box\r\n          title=\"Artists 🎤\"\r\n          newEntry={newArtistName}\r\n          setNewEntry={setNewArtistName}\r\n          handleAdd={handleAddArtist}\r\n        >\r\n          <ArtistList\r\n            list={searchFilter === \"artists\" ? filteredList : list}\r\n            onSelectArtist={handleSelectArtist}\r\n            onDeleteArtist={handleDeleteArtist}\r\n            onUpdateArtist={handleUpdateArtist}\r\n            selectedArtist={selectedArtist}\r\n          />\r\n        </Box>\r\n        <Box\r\n          title=\"Albums 💿\"\r\n          newEntry={newAlbumName}\r\n          setNewEntry={setNewAlbumName}\r\n          handleAdd={handleAddAlbum}\r\n        >\r\n          {selectedArtist ? (\r\n            <AlbumList\r\n              artist={selectedArtist}\r\n              onSelectAlbum={handleSelectAlbum}\r\n              onDeleteAlbum={handleDeleteAlbum}\r\n              onUpdateAlbum={handleUpdateAlbum}\r\n              selectedAlbum={selectedAlbum}\r\n              filteredAlbums={\r\n                searchFilter === \"albums\"\r\n                  ? selectedArtist.albums.filter((album) =>\r\n                      album.title.toLowerCase().includes(searchQuery)\r\n                    )\r\n                  : selectedArtist.albums\r\n              }\r\n            />\r\n          ) : (\r\n            <div className={\"details\"}>\r\n              <p className={\"box-text-no-data\"}>\r\n                Select an artist in order to see the albums. ⚠️\r\n              </p>\r\n            </div>\r\n          )}\r\n        </Box>\r\n        <Box\r\n          title=\"Songs 🎵\"\r\n          newEntry={newSongName}\r\n          setNewEntry={setNewSongName}\r\n          handleAdd={handleAddSong}\r\n          newSongLength={newSongLength}\r\n          setNewSongLength={setNewSongLength}\r\n        >\r\n          {selectedAlbum ? (\r\n            <AlbumDetails\r\n              artist={selectedArtist}\r\n              album={selectedAlbum}\r\n              onDeleteSong={handleDeleteSong}\r\n              onUpdateSong={handleUpdateSong}\r\n              filteredSongs={\r\n                searchFilter === \"songs\"\r\n                  ? selectedAlbum.songs.filter((song) =>\r\n                      song.title.toLowerCase().includes(searchQuery)\r\n                    )\r\n                  : selectedAlbum.songs\r\n              }\r\n            />\r\n          ) : (\r\n            <div className={\"details\"}>\r\n              <p className={\"box-text-no-data\"}>\r\n                Select an album in order to see the description and the songs .\r\n                ⚠️\r\n              </p>\r\n            </div>\r\n          )}\r\n        </Box>\r\n      </Main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
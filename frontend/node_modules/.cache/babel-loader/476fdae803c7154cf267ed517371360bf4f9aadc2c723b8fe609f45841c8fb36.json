{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\whole\\\\Documents\\\\Digital-Music-Library\\\\Digital-Music-Library\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport NavBar from \"./components/NavBar\";\nimport Search from \"./components/Search\";\nimport Main from \"./components/Main\";\nimport Box from \"./components/Box\";\nimport ArtistList from \"./components/ArtistList\";\nimport AlbumList from \"./components/AlbumList\";\nimport AlbumDetails from \"./components/AlbumDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [list, setList] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(null);\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\n  const [newArtistName, setNewArtistName] = useState(\"\");\n  const [newAlbumName, setNewAlbumName] = useState(\"\");\n  const [newSongName, setNewSongName] = useState(\"\");\n  const [newSongLength, setNewSongLength] = useState(\"\");\n  useEffect(() => {\n    Axios.get(\"http://localhost:4000/api/retrieveMusicLibrary\").then(res => {\n      const data = res.data;\n      if (Array.isArray(data)) {\n        setList(data);\n      } else {\n        console.error(\"Unexpected data structure:\", data);\n        setList([]);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n      setList([]);\n    });\n  }, []);\n  function handleSelectArtist(artist) {\n    setSelectedArtist(selectedArtist => artist === selectedArtist ? null : artist);\n    setSelectedAlbum(null); // Reset selected album when a new artist is selected\n  }\n  function handleSelectAlbum(album) {\n    setSelectedAlbum(selectedAlbum => album === selectedAlbum ? null : album);\n  }\n  async function handleDeleteArtist(artistName) {\n    try {\n      await Axios.delete(`http://localhost:4000/api/deleteArtist/${artistName}`);\n      setList(list => list.filter(artist => artist.name !== artistName));\n      setSelectedArtist(null);\n      setSelectedAlbum(null);\n    } catch (error) {\n      console.error(\"Error deleting artist:\", error);\n    }\n  }\n  async function handleDeleteAlbum(artistName, albumTitle) {\n    try {\n      await Axios.delete(`http://localhost:4000/api/deleteAlbum/${artistName}/${albumTitle}`);\n      setList(list => list.map(artist => artist.name === artistName ? {\n        ...artist,\n        albums: artist.albums.filter(album => album.title !== albumTitle)\n      } : artist));\n      setSelectedAlbum(null);\n      setSelectedArtist(prevSelectedArtist => ({\n        ...prevSelectedArtist,\n        albums: prevSelectedArtist.albums.filter(album => album.title !== albumTitle)\n      }));\n    } catch (error) {\n      console.error(\"Error deleting album:\", error);\n    }\n  }\n  async function handleDeleteSong(artistName, albumTitle, songTitle) {\n    try {\n      await Axios.delete(`http://localhost:4000/api/deleteSong/${artistName}/${albumTitle}/${songTitle}`);\n      setList(prevList => prevList.map(artist => artist.name === artistName ? {\n        ...artist,\n        albums: artist.albums.map(album => album.title === albumTitle ? {\n          ...album,\n          songs: album.songs.filter(song => song.title !== songTitle)\n        } : album)\n      } : artist));\n      setSelectedAlbum(prevSelectedAlbum => prevSelectedAlbum && prevSelectedAlbum.title === albumTitle ? {\n        ...prevSelectedAlbum,\n        songs: prevSelectedAlbum.songs.filter(song => song.title !== songTitle)\n      } : prevSelectedAlbum);\n      setSelectedArtist(prevSelectedArtist => ({\n        ...prevSelectedArtist,\n        albums: prevSelectedArtist.albums.map(album => album.title === albumTitle ? {\n          ...album,\n          songs: album.songs.filter(song => song.title !== songTitle)\n        } : album)\n      }));\n    } catch (error) {\n      console.error(\"Error deleting song:\", error);\n    }\n  }\n  async function handleUpdateArtist(oldName, newName) {\n    try {\n      await Axios.put(`http://localhost:4000/api/updateArtist/`, {\n        oldName,\n        newName\n      });\n      setList(list => list.map(artist => artist.name === oldName ? {\n        ...artist,\n        name: newName\n      } : artist));\n      if (selectedArtist && selectedArtist.name === oldName) {\n        setSelectedArtist(prevSelectedArtist => ({\n          ...prevSelectedArtist,\n          name: newName\n        }));\n      }\n    } catch (error) {\n      console.error(\"Error updating artist:\", error);\n    }\n  }\n  async function handleUpdateAlbum(artistName, oldTitle, newTitle, newDescription) {\n    try {\n      await Axios.put(`http://localhost:4000/api/updateAlbum/`, {\n        artistName,\n        oldTitle,\n        newTitle,\n        newDescription\n      });\n      setList(list => list.map(artist => artist.name === artistName ? {\n        ...artist,\n        albums: artist.albums.map(album => album.title === oldTitle ? {\n          ...album,\n          title: newTitle,\n          description: newDescription\n        } : album)\n      } : artist));\n      if (selectedAlbum && selectedAlbum.title === oldTitle) {\n        setSelectedAlbum(prevSelectedAlbum => ({\n          ...prevSelectedAlbum,\n          title: newTitle,\n          description: newDescription\n        }));\n      }\n      setSelectedArtist(prevSelectedArtist => ({\n        ...prevSelectedArtist,\n        albums: prevSelectedArtist.albums.map(album => album.title === oldTitle ? {\n          ...album,\n          title: newTitle,\n          description: newDescription\n        } : album)\n      }));\n    } catch (error) {\n      console.error(\"Error updating album:\", error);\n    }\n  }\n  async function handleUpdateSong(artistName, albumTitle, oldTitle, newTitle, newLength) {\n    try {\n      await Axios.put(`http://localhost:4000/api/updateSong/`, {\n        artistName,\n        albumTitle,\n        oldTitle,\n        newTitle,\n        newLength\n      });\n      setList(list => list.map(artist => artist.name === artistName ? {\n        ...artist,\n        albums: artist.albums.map(album => album.title === albumTitle ? {\n          ...album,\n          songs: album.songs.map(song => song.title === oldTitle ? {\n            ...song,\n            title: newTitle,\n            length: newLength\n          } : song)\n        } : album)\n      } : artist));\n      if (selectedAlbum && selectedAlbum.title === albumTitle) {\n        setSelectedAlbum(prevSelectedAlbum => ({\n          ...prevSelectedAlbum,\n          songs: prevSelectedAlbum.songs.map(song => song.title === oldTitle ? {\n            ...song,\n            title: newTitle,\n            length: newLength\n          } : song)\n        }));\n      }\n      setSelectedArtist(prevSelectedArtist => ({\n        ...prevSelectedArtist,\n        albums: prevSelectedArtist.albums.map(album => album.title === albumTitle ? {\n          ...album,\n          songs: album.songs.map(song => song.title === oldTitle ? {\n            ...song,\n            title: newTitle,\n            length: newLength\n          } : song)\n        } : album)\n      }));\n    } catch (error) {\n      console.error(\"Error updating song:\", error);\n    }\n  }\n  async function handleAddArtist(event) {\n    event.preventDefault();\n    try {\n      await Axios.post(`http://localhost:4000/api/addArtist`, {\n        name: newArtistName\n      });\n      setList(prevList => [...prevList, {\n        name: newArtistName,\n        albums: []\n      }]);\n      setNewArtistName(\"\");\n    } catch (error) {\n      console.error(\"Error adding artist:\", error);\n    }\n  }\n  async function handleAddAlbum(event) {\n    event.preventDefault();\n    const currentArtistName = selectedArtist.name;\n    try {\n      await Axios.post(`http://localhost:4000/api/addAlbum`, {\n        artistName: currentArtistName,\n        albumTitle: newAlbumName\n      });\n      const updatedList = list.map(artist => artist.name === currentArtistName ? {\n        ...artist,\n        albums: [...artist.albums, {\n          title: newAlbumName,\n          songs: [],\n          description: \"\"\n        }]\n      } : artist);\n      setList(updatedList);\n      setNewAlbumName(\"\");\n    } catch (error) {\n      console.error(\"Error adding album:\", error);\n    }\n  }\n  async function handleAddSong(event) {\n    event.preventDefault();\n    const currentArtistName = selectedArtist.name;\n    const currentAlbumTitle = selectedAlbum.title;\n    try {\n      await Axios.post(`http://localhost:4000/api/addSong`, {\n        artistName: currentArtistName,\n        albumTitle: currentAlbumTitle,\n        songTitle: newSongName,\n        songLength: newSongLength\n      });\n      const updatedList = list.map(artist => artist.name === currentArtistName ? {\n        ...artist,\n        albums: artist.albums.map(album => album.title === currentAlbumTitle ? {\n          ...album,\n          songs: [...album.songs, {\n            title: newSongName,\n            length: newSongLength\n          }]\n        } : album)\n      } : artist);\n      setList(updatedList);\n      setNewSongName(\"\");\n      setNewSongLength(\"\");\n    } catch (error) {\n      console.error(\"Error adding song:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      selectedArtist: selectedArtist,\n      selectedAlbum: selectedAlbum,\n      list: list,\n      onSelectArtist: handleSelectArtist,\n      onSelectAlbum: handleSelectAlbum,\n      onDeleteArtist: handleDeleteArtist,\n      onDeleteAlbum: handleDeleteAlbum,\n      onDeleteSong: handleDeleteSong,\n      onAddArtist: handleAddArtist,\n      newArtistName: newArtistName,\n      setNewArtistName: setNewArtistName,\n      onAddAlbum: handleAddAlbum,\n      newAlbumName: newAlbumName,\n      setNewAlbumName: setNewAlbumName,\n      onAddSong: handleAddSong,\n      newSongName: newSongName,\n      newSongLength: newSongLength,\n      setNewSongName: setNewSongName,\n      setNewSongLength: setNewSongLength,\n      onUpdateArtist: handleUpdateArtist,\n      onUpdateAlbum: handleUpdateAlbum,\n      onUpdateSong: handleUpdateSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ArtistList, {\n      list: list,\n      selectedArtist: selectedArtist,\n      onSelectArtist: handleSelectArtist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlbumList, {\n      selectedArtist: selectedArtist,\n      selectedAlbum: selectedAlbum,\n      onSelectAlbum: handleSelectAlbum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlbumDetails, {\n      selectedArtist: selectedArtist,\n      selectedAlbum: selectedAlbum,\n      onDeleteSong: handleDeleteSong,\n      onUpdateSong: handleUpdateSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 371,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GSRpJZj6OM/45botQDxH26OEAd0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Axios","NavBar","Search","Main","Box","ArtistList","AlbumList","AlbumDetails","jsxDEV","_jsxDEV","App","_s","list","setList","selectedArtist","setSelectedArtist","selectedAlbum","setSelectedAlbum","newArtistName","setNewArtistName","newAlbumName","setNewAlbumName","newSongName","setNewSongName","newSongLength","setNewSongLength","get","then","res","data","Array","isArray","console","error","catch","handleSelectArtist","artist","handleSelectAlbum","album","handleDeleteArtist","artistName","delete","filter","name","handleDeleteAlbum","albumTitle","map","albums","title","prevSelectedArtist","handleDeleteSong","songTitle","prevList","songs","song","prevSelectedAlbum","handleUpdateArtist","oldName","newName","put","handleUpdateAlbum","oldTitle","newTitle","newDescription","description","handleUpdateSong","newLength","length","handleAddArtist","event","preventDefault","post","handleAddAlbum","currentArtistName","updatedList","handleAddSong","currentAlbumTitle","songLength","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectArtist","onSelectAlbum","onDeleteArtist","onDeleteAlbum","onDeleteSong","onAddArtist","onAddAlbum","onAddSong","onUpdateArtist","onUpdateAlbum","onUpdateSong","_c","$RefreshReg$"],"sources":["C:/Users/whole/Documents/Digital-Music-Library/Digital-Music-Library/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Search from \"./components/Search\";\r\nimport Main from \"./components/Main\";\r\nimport Box from \"./components/Box\";\r\nimport ArtistList from \"./components/ArtistList\";\r\nimport AlbumList from \"./components/AlbumList\";\r\nimport AlbumDetails from \"./components/AlbumDetails\";\r\n\r\nfunction App() {\r\n  const [list, setList] = useState([]);\r\n  const [selectedArtist, setSelectedArtist] = useState(null);\r\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\r\n  const [newArtistName, setNewArtistName] = useState(\"\");\r\n  const [newAlbumName, setNewAlbumName] = useState(\"\");\r\n  const [newSongName, setNewSongName] = useState(\"\");\r\n  const [newSongLength, setNewSongLength] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:4000/api/retrieveMusicLibrary\")\r\n      .then((res) => {\r\n        const data = res.data;\r\n        if (Array.isArray(data)) {\r\n          setList(data);\r\n        } else {\r\n          console.error(\"Unexpected data structure:\", data);\r\n          setList([]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        setList([]);\r\n      });\r\n  }, []);\r\n\r\n  function handleSelectArtist(artist) {\r\n    setSelectedArtist((selectedArtist) =>\r\n      artist === selectedArtist ? null : artist\r\n    );\r\n    setSelectedAlbum(null); // Reset selected album when a new artist is selected\r\n  }\r\n\r\n  function handleSelectAlbum(album) {\r\n    setSelectedAlbum((selectedAlbum) =>\r\n      album === selectedAlbum ? null : album\r\n    );\r\n  }\r\n\r\n  async function handleDeleteArtist(artistName) {\r\n    try {\r\n      await Axios.delete(\r\n        `http://localhost:4000/api/deleteArtist/${artistName}`\r\n      );\r\n      setList((list) => list.filter((artist) => artist.name !== artistName));\r\n      setSelectedArtist(null);\r\n      setSelectedAlbum(null);\r\n    } catch (error) {\r\n      console.error(\"Error deleting artist:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleDeleteAlbum(artistName, albumTitle) {\r\n    try {\r\n      await Axios.delete(\r\n        `http://localhost:4000/api/deleteAlbum/${artistName}/${albumTitle}`\r\n      );\r\n      setList((list) =>\r\n        list.map((artist) =>\r\n          artist.name === artistName\r\n            ? {\r\n                ...artist,\r\n                albums: artist.albums.filter(\r\n                  (album) => album.title !== albumTitle\r\n                ),\r\n              }\r\n            : artist\r\n        )\r\n      );\r\n      setSelectedAlbum(null);\r\n      setSelectedArtist((prevSelectedArtist) => ({\r\n        ...prevSelectedArtist,\r\n        albums: prevSelectedArtist.albums.filter(\r\n          (album) => album.title !== albumTitle\r\n        ),\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error deleting album:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleDeleteSong(artistName, albumTitle, songTitle) {\r\n    try {\r\n      await Axios.delete(\r\n        `http://localhost:4000/api/deleteSong/${artistName}/${albumTitle}/${songTitle}`\r\n      );\r\n\r\n      setList((prevList) =>\r\n        prevList.map((artist) =>\r\n          artist.name === artistName\r\n            ? {\r\n                ...artist,\r\n                albums: artist.albums.map((album) =>\r\n                  album.title === albumTitle\r\n                    ? {\r\n                        ...album,\r\n                        songs: album.songs.filter(\r\n                          (song) => song.title !== songTitle\r\n                        ),\r\n                      }\r\n                    : album\r\n                ),\r\n              }\r\n            : artist\r\n        )\r\n      );\r\n\r\n      setSelectedAlbum((prevSelectedAlbum) =>\r\n        prevSelectedAlbum && prevSelectedAlbum.title === albumTitle\r\n          ? {\r\n              ...prevSelectedAlbum,\r\n              songs: prevSelectedAlbum.songs.filter(\r\n                (song) => song.title !== songTitle\r\n              ),\r\n            }\r\n          : prevSelectedAlbum\r\n      );\r\n\r\n      setSelectedArtist((prevSelectedArtist) => ({\r\n        ...prevSelectedArtist,\r\n        albums: prevSelectedArtist.albums.map((album) =>\r\n          album.title === albumTitle\r\n            ? {\r\n                ...album,\r\n                songs: album.songs.filter((song) => song.title !== songTitle),\r\n              }\r\n            : album\r\n        ),\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error deleting song:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleUpdateArtist(oldName, newName) {\r\n    try {\r\n      await Axios.put(`http://localhost:4000/api/updateArtist/`, {\r\n        oldName,\r\n        newName,\r\n      });\r\n      setList((list) =>\r\n        list.map((artist) =>\r\n          artist.name === oldName\r\n            ? {\r\n                ...artist,\r\n                name: newName,\r\n              }\r\n            : artist\r\n        )\r\n      );\r\n\r\n      if (selectedArtist && selectedArtist.name === oldName) {\r\n        setSelectedArtist((prevSelectedArtist) => ({\r\n          ...prevSelectedArtist,\r\n          name: newName,\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating artist:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleUpdateAlbum(\r\n    artistName,\r\n    oldTitle,\r\n    newTitle,\r\n    newDescription\r\n  ) {\r\n    try {\r\n      await Axios.put(`http://localhost:4000/api/updateAlbum/`, {\r\n        artistName,\r\n        oldTitle,\r\n        newTitle,\r\n        newDescription,\r\n      });\r\n      setList((list) =>\r\n        list.map((artist) =>\r\n          artist.name === artistName\r\n            ? {\r\n                ...artist,\r\n                albums: artist.albums.map((album) =>\r\n                  album.title === oldTitle\r\n                    ? { ...album, title: newTitle, description: newDescription }\r\n                    : album\r\n                ),\r\n              }\r\n            : artist\r\n        )\r\n      );\r\n\r\n      if (selectedAlbum && selectedAlbum.title === oldTitle) {\r\n        setSelectedAlbum((prevSelectedAlbum) => ({\r\n          ...prevSelectedAlbum,\r\n          title: newTitle,\r\n          description: newDescription,\r\n        }));\r\n      }\r\n\r\n      setSelectedArtist((prevSelectedArtist) => ({\r\n        ...prevSelectedArtist,\r\n        albums: prevSelectedArtist.albums.map((album) =>\r\n          album.title === oldTitle\r\n            ? { ...album, title: newTitle, description: newDescription }\r\n            : album\r\n        ),\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error updating album:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleUpdateSong(\r\n    artistName,\r\n    albumTitle,\r\n    oldTitle,\r\n    newTitle,\r\n    newLength\r\n  ) {\r\n    try {\r\n      await Axios.put(`http://localhost:4000/api/updateSong/`, {\r\n        artistName,\r\n        albumTitle,\r\n        oldTitle,\r\n        newTitle,\r\n        newLength,\r\n      });\r\n\r\n      setList((list) =>\r\n        list.map((artist) =>\r\n          artist.name === artistName\r\n            ? {\r\n                ...artist,\r\n                albums: artist.albums.map((album) =>\r\n                  album.title === albumTitle\r\n                    ? {\r\n                        ...album,\r\n                        songs: album.songs.map((song) =>\r\n                          song.title === oldTitle\r\n                            ? { ...song, title: newTitle, length: newLength }\r\n                            : song\r\n                        ),\r\n                      }\r\n                    : album\r\n                ),\r\n              }\r\n            : artist\r\n        )\r\n      );\r\n\r\n      if (selectedAlbum && selectedAlbum.title === albumTitle) {\r\n        setSelectedAlbum((prevSelectedAlbum) => ({\r\n          ...prevSelectedAlbum,\r\n          songs: prevSelectedAlbum.songs.map((song) =>\r\n            song.title === oldTitle\r\n              ? { ...song, title: newTitle, length: newLength }\r\n              : song\r\n          ),\r\n        }));\r\n      }\r\n\r\n      setSelectedArtist((prevSelectedArtist) => ({\r\n        ...prevSelectedArtist,\r\n        albums: prevSelectedArtist.albums.map((album) =>\r\n          album.title === albumTitle\r\n            ? {\r\n                ...album,\r\n                songs: album.songs.map((song) =>\r\n                  song.title === oldTitle\r\n                    ? { ...song, title: newTitle, length: newLength }\r\n                    : song\r\n                ),\r\n              }\r\n            : album\r\n        ),\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error updating song:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleAddArtist(event) {\r\n    event.preventDefault();\r\n    try {\r\n      await Axios.post(`http://localhost:4000/api/addArtist`, {\r\n        name: newArtistName,\r\n      });\r\n      setList((prevList) => [...prevList, { name: newArtistName, albums: [] }]);\r\n      setNewArtistName(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding artist:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleAddAlbum(event) {\r\n    event.preventDefault();\r\n    const currentArtistName = selectedArtist.name;\r\n    try {\r\n      await Axios.post(`http://localhost:4000/api/addAlbum`, {\r\n        artistName: currentArtistName,\r\n        albumTitle: newAlbumName,\r\n      });\r\n\r\n      const updatedList = list.map((artist) =>\r\n        artist.name === currentArtistName\r\n          ? {\r\n              ...artist,\r\n              albums: [\r\n                ...artist.albums,\r\n                { title: newAlbumName, songs: [], description: \"\" },\r\n              ],\r\n            }\r\n          : artist\r\n      );\r\n      setList(updatedList);\r\n      setNewAlbumName(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding album:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleAddSong(event) {\r\n    event.preventDefault();\r\n    const currentArtistName = selectedArtist.name;\r\n    const currentAlbumTitle = selectedAlbum.title;\r\n    try {\r\n      await Axios.post(`http://localhost:4000/api/addSong`, {\r\n        artistName: currentArtistName,\r\n        albumTitle: currentAlbumTitle,\r\n        songTitle: newSongName,\r\n        songLength: newSongLength,\r\n      });\r\n\r\n      const updatedList = list.map((artist) =>\r\n        artist.name === currentArtistName\r\n          ? {\r\n              ...artist,\r\n              albums: artist.albums.map((album) =>\r\n                album.title === currentAlbumTitle\r\n                  ? {\r\n                      ...album,\r\n                      songs: [\r\n                        ...album.songs,\r\n                        { title: newSongName, length: newSongLength },\r\n                      ],\r\n                    }\r\n                  : album\r\n              ),\r\n            }\r\n          : artist\r\n      );\r\n\r\n      setList(updatedList);\r\n      setNewSongName(\"\");\r\n      setNewSongLength(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding song:\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Search />\r\n      <Main />\r\n      <Box\r\n        selectedArtist={selectedArtist}\r\n        selectedAlbum={selectedAlbum}\r\n        list={list}\r\n        onSelectArtist={handleSelectArtist}\r\n        onSelectAlbum={handleSelectAlbum}\r\n        onDeleteArtist={handleDeleteArtist}\r\n        onDeleteAlbum={handleDeleteAlbum}\r\n        onDeleteSong={handleDeleteSong}\r\n        onAddArtist={handleAddArtist}\r\n        newArtistName={newArtistName}\r\n        setNewArtistName={setNewArtistName}\r\n        onAddAlbum={handleAddAlbum}\r\n        newAlbumName={newAlbumName}\r\n        setNewAlbumName={setNewAlbumName}\r\n        onAddSong={handleAddSong}\r\n        newSongName={newSongName}\r\n        newSongLength={newSongLength}\r\n        setNewSongName={setNewSongName}\r\n        setNewSongLength={setNewSongLength}\r\n        onUpdateArtist={handleUpdateArtist}\r\n        onUpdateAlbum={handleUpdateAlbum}\r\n        onUpdateSong={handleUpdateSong}\r\n      />\r\n      <ArtistList\r\n        list={list}\r\n        selectedArtist={selectedArtist}\r\n        onSelectArtist={handleSelectArtist}\r\n      />\r\n      <AlbumList\r\n        selectedArtist={selectedArtist}\r\n        selectedAlbum={selectedAlbum}\r\n        onSelectAlbum={handleSelectAlbum}\r\n      />\r\n      <AlbumDetails\r\n        selectedArtist={selectedArtist}\r\n        selectedAlbum={selectedAlbum}\r\n        onDeleteSong={handleDeleteSong}\r\n        onUpdateSong={handleUpdateSong}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
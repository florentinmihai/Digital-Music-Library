{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\whole\\\\Documents\\\\Digital-Music-Library\\\\Digital-Music-Library\\\\frontend\\\\src\\\\components\\\\Album.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ActionButtons from \"./ActionButtons\";\nimport EditButtons from \"./EditButtons\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Album({\n  album,\n  onSelectAlbum,\n  onDeleteAlbum,\n  onUpdateAlbum,\n  artistName,\n  isSelected\n}) {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [newTitle, setNewTitle] = useState(album.title);\n  const [newDescription, setNewDescription] = useState(album.description);\n  const handleUpdate = () => {\n    onUpdateAlbum(artistName, album.title, newTitle, newDescription);\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: isSelected ? \"selected\" : \"\",\n    children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-text\",\n        value: newTitle,\n        onChange: e => setNewTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"edit-text-description\",\n        value: newDescription,\n        onChange: e => setNewDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-save\",\n        onClick: handleUpdate,\n        children: \"\\uD83D\\uDC4D\\uD83C\\uDFFC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-delete\",\n        onClick: () => setIsEditing(false),\n        children: \"\\uD83D\\uDC4E\\uD83C\\uDFFC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        onClick: () => onSelectAlbum(album),\n        children: album.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ActionButtons, {\n        onDelete: () => onDeleteAlbum(artistName, album.title),\n        onUpdate: () => setIsEditing(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Album, \"JgLEsSiOIr3uoWdE7OwoYz33slQ=\");\n_c = Album;\nexport default Album;\nvar _c;\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"names":["React","useState","ActionButtons","EditButtons","jsxDEV","_jsxDEV","Fragment","_Fragment","Album","album","onSelectAlbum","onDeleteAlbum","onUpdateAlbum","artistName","isSelected","_s","isEditing","setIsEditing","newTitle","setNewTitle","title","newDescription","setNewDescription","description","handleUpdate","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDelete","onUpdate","_c","$RefreshReg$"],"sources":["C:/Users/whole/Documents/Digital-Music-Library/Digital-Music-Library/frontend/src/components/Album.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ActionButtons from \"./ActionButtons\";\r\nimport EditButtons from \"./EditButtons\";\r\n\r\nfunction Album({\r\n  album,\r\n  onSelectAlbum,\r\n  onDeleteAlbum,\r\n  onUpdateAlbum,\r\n  artistName,\r\n  isSelected,\r\n}) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [newTitle, setNewTitle] = useState(album.title);\r\n  const [newDescription, setNewDescription] = useState(album.description);\r\n\r\n  const handleUpdate = () => {\r\n    onUpdateAlbum(artistName, album.title, newTitle, newDescription);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <li className={isSelected ? \"selected\" : \"\"}>\r\n      {isEditing ? (\r\n        <>\r\n          <input\r\n            className={\"edit-text\"}\r\n            value={newTitle}\r\n            onChange={(e) => setNewTitle(e.target.value)}\r\n          />\r\n          <br />\r\n          <br />\r\n          <textarea\r\n            className={\"edit-text-description\"}\r\n            value={newDescription}\r\n            onChange={(e) => setNewDescription(e.target.value)}\r\n          />\r\n          <button className={\"btn-save\"} onClick={handleUpdate}>\r\n            üëçüèº\r\n          </button>\r\n          <button className={\"btn-delete\"} onClick={() => setIsEditing(false)}>\r\n            üëéüèº\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4 onClick={() => onSelectAlbum(album)}>{album.title}</h4>\r\n\r\n          <ActionButtons\r\n            onDelete={() => onDeleteAlbum(artistName, album.title)}\r\n            onUpdate={() => setIsEditing(true)}\r\n          />\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Album;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
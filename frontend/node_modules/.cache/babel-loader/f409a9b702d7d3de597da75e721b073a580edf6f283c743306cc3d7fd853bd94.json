{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\whole\\\\Documents\\\\Digital-Music-Library\\\\Digital-Music-Library\\\\frontend\\\\src\\\\components\\\\Artist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ActionButtons from \"./ActionButtons\";\nimport EditButtons from \"./EditButtons\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Artist({\n  artist,\n  onSelectArtist,\n  onDeleteArtist,\n  onUpdateArtist,\n  isSelected\n}) {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(artist.name);\n  const handleUpdate = () => {\n    onUpdateArtist(artist.name, newName);\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: isSelected ? \"selected\" : \"\",\n    children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-text\",\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EditButtons, {\n        onSave: handleUpdate,\n        onCancel: () => setIsEditing(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        onClick: () => onSelectArtist(artist),\n        children: artist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ActionButtons, {\n        onDelete: () => onDeleteArtist(artist.name),\n        onUpdate: () => setIsEditing(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Artist, \"29FoFWKQpOjYrSwI243qxHvu3es=\");\n_c = Artist;\nexport default Artist;\nvar _c;\n$RefreshReg$(_c, \"Artist\");","map":{"version":3,"names":["React","useState","ActionButtons","EditButtons","jsxDEV","_jsxDEV","Fragment","_Fragment","Artist","artist","onSelectArtist","onDeleteArtist","onUpdateArtist","isSelected","_s","isEditing","setIsEditing","newName","setNewName","name","handleUpdate","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onSave","onCancel","onClick","onDelete","onUpdate","_c","$RefreshReg$"],"sources":["C:/Users/whole/Documents/Digital-Music-Library/Digital-Music-Library/frontend/src/components/Artist.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ActionButtons from \"./ActionButtons\";\r\nimport EditButtons from \"./EditButtons\";\r\n\r\nfunction Artist({\r\n  artist,\r\n  onSelectArtist,\r\n  onDeleteArtist,\r\n  onUpdateArtist,\r\n  isSelected,\r\n}) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [newName, setNewName] = useState(artist.name);\r\n\r\n  const handleUpdate = () => {\r\n    onUpdateArtist(artist.name, newName);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <li className={isSelected ? \"selected\" : \"\"}>\r\n      {isEditing ? (\r\n        <>\r\n          <input\r\n            className={\"edit-text\"}\r\n            value={newName}\r\n            onChange={(e) => setNewName(e.target.value)}\r\n          />\r\n\r\n          <EditButtons\r\n            onSave={handleUpdate}\r\n            onCancel={() => setIsEditing(false)}\r\n          ></EditButtons>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h3 onClick={() => onSelectArtist(artist)}>{artist.name}</h3>\r\n          <ActionButtons\r\n            onDelete={() => onDeleteArtist(artist.name)}\r\n            onUpdate={() => setIsEditing(true)}\r\n          />\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Artist;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,MAAMA,CAAC;EACdC,MAAM;EACNC,cAAc;EACdC,cAAc;EACdC,cAAc;EACdC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAACQ,MAAM,CAACU,IAAI,CAAC;EAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBR,cAAc,CAACH,MAAM,CAACU,IAAI,EAAEF,OAAO,CAAC;IACpCD,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEX,OAAA;IAAIgB,SAAS,EAAER,UAAU,GAAG,UAAU,GAAG,EAAG;IAAAS,QAAA,EACzCP,SAAS,gBACRV,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA;QACEgB,SAAS,EAAE,WAAY;QACvBE,KAAK,EAAEN,OAAQ;QACfO,QAAQ,EAAGC,CAAC,IAAKP,UAAU,CAACO,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eAEFzB,OAAA,CAACF,WAAW;QACV4B,MAAM,EAAEX,YAAa;QACrBY,QAAQ,EAAEA,CAAA,KAAMhB,YAAY,CAAC,KAAK;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA,eACf,CAAC,gBAEHzB,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA;QAAI4B,OAAO,EAAEA,CAAA,KAAMvB,cAAc,CAACD,MAAM,CAAE;QAAAa,QAAA,EAAEb,MAAM,CAACU;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7DzB,OAAA,CAACH,aAAa;QACZgC,QAAQ,EAAEA,CAAA,KAAMvB,cAAc,CAACF,MAAM,CAACU,IAAI,CAAE;QAC5CgB,QAAQ,EAAEA,CAAA,KAAMnB,YAAY,CAAC,IAAI;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA,eACF;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAET;AAAChB,EAAA,CAzCQN,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AA2Cf,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
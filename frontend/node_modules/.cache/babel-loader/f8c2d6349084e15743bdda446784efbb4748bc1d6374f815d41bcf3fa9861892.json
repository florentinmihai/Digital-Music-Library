{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\whole\\\\Documents\\\\Digital-Music-Library\\\\Digital-Music-Library\\\\frontend\\\\src\\\\components\\\\Box.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport AddForm from \"./AddForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Box({\n  title,\n  children,\n  handleAdd,\n  newEntry,\n  setNewEntry,\n  newSongLength,\n  setNewSongLength\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-toggle\",\n      onClick: () => setIsOpen(open => !open),\n      children: isOpen ? \"-\" : \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"box-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), isOpen ? /*#__PURE__*/_jsxDEV(AddForm, {\n      handleAdd: handleAdd,\n      newEntry: newEntry,\n      setNewEntry: setNewEntry,\n      title: title,\n      newSongLength: newSongLength,\n      setNewSongLength: newSongLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : \"\", children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Box, \"mEi83NlPXQzy/XIDfTYWzOSvaHw=\");\n_c = Box;\nexport default Box;\nvar _c;\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"names":["React","useState","AddForm","jsxDEV","_jsxDEV","Box","title","children","handleAdd","newEntry","setNewEntry","newSongLength","setNewSongLength","_s","isOpen","setIsOpen","className","onClick","open","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/whole/Documents/Digital-Music-Library/Digital-Music-Library/frontend/src/components/Box.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport AddForm from \"./AddForm\";\r\n\r\nfunction Box({\r\n  title,\r\n  children,\r\n  handleAdd,\r\n  newEntry,\r\n  setNewEntry,\r\n  newSongLength,\r\n  setNewSongLength,\r\n}) {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n\r\n  return (\r\n    <div className=\"box\">\r\n      <button className=\"btn-toggle\" onClick={() => setIsOpen((open) => !open)}>\r\n        {isOpen ? \"-\" : \"+\"}\r\n      </button>\r\n      <h1 className={\"box-title\"}>{title}</h1>\r\n      {isOpen ? (\r\n        <AddForm\r\n          handleAdd={handleAdd}\r\n          newEntry={newEntry}\r\n          setNewEntry={setNewEntry}\r\n          title={title}\r\n          newSongLength={newSongLength}\r\n          setNewSongLength={newSongLength}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Box;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,GAAGA,CAAC;EACXC,KAAK;EACLC,QAAQ;EACRC,SAAS;EACTC,QAAQ;EACRC,WAAW;EACXC,aAAa;EACbC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE1C,oBACEG,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAT,QAAA,gBAClBH,OAAA;MAAQY,SAAS,EAAC,YAAY;MAACC,OAAO,EAAEA,CAAA,KAAMF,SAAS,CAAEG,IAAI,IAAK,CAACA,IAAI,CAAE;MAAAX,QAAA,EACtEO,MAAM,GAAG,GAAG,GAAG;IAAG;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACTlB,OAAA;MAAIY,SAAS,EAAE,WAAY;MAAAT,QAAA,EAAED;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACvCR,MAAM,gBACLV,OAAA,CAACF,OAAO;MACNM,SAAS,EAAEA,SAAU;MACrBC,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA,WAAY;MACzBJ,KAAK,EAAEA,KAAM;MACbK,aAAa,EAAEA,aAAc;MAC7BC,gBAAgB,EAAED;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,GAEF,EACD,EACAf,QAAQ;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACT,EAAA,CAhCQR,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}